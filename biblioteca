
cliente_usuario = []
cliente_senha = []

def ler_usuarios():
    try:
        with open('usuarios.txt','r') as file:
            for linha in file:
                usuario, senha = linha.strip().split(',')
                cliente_usuario.append(usuario)
                cliente_senha.append(senha)
    except FileNotFoundError:
        print('arquivo não encntrado. Seracriado um novo arquivo.')
    except Exception as e:

        print(f'ocorreu um erro ao ler os arquivos: {e}')
def gravar_usuarios():
    try:
        with open('usuarios.txt', 'w') as file:
            for usuario, senha in zip(cliente_usuario, cliente_senha):
                file.write(f'{usuario},{senha}\n')
    except Exception as e:
        print(f'Ocorreu um erro ao gravar os usuários: {e}')


def gerenciador_usuarios():
    while True:
        print('Menu: ')
        print('1. Criar usuário')
        print('2. Remover usuário')
        print('3. Login')
        print('4. Cadastrar livros')
        print('5. Sair')
        escolha = input('Escolha uma das opções: ')

        if escolha == '1':
            usuario_login = input('Crie um nome de usuário: ')
            while usuario_login in cliente_usuario:
                print('Nome de usuário já existe. Tente outro.')
                usuario_login = input('Crie um nome de usuário: ')
            senha_login = input('Crie uma senha: ')
            while len(senha_login) < 6:
                print('A senha deve ter pelo menos 6 caracteres. Tente novamente.')
                senha_login = input('Crie uma senha: ')
            cliente_usuario.append(usuario_login)
            cliente_senha.append(senha_login)
            print('Usuário criado com sucesso.')

        elif escolha == '2':
            remover_usuario = input('Digite o nome do usuário a ser removido: ')
            if remover_usuario in cliente_usuario:
                index = cliente_usuario.index(remover_usuario)
                cliente_usuario.pop(index)
                cliente_senha.pop(index)
                print('Usuário removido com sucesso.')
            else:
                print('Usuário não encontrado.')

        elif escolha == '3':
            login(cliente_usuario, cliente_senha)

        elif escolha == '4':
            cadastrar_livros()
            gerenciador_livros()
            procurar_livro()
        elif escolha == '5':
            break

        else: 
            print('Opção inválida, tente novamente.')
    
    return cliente_usuario, cliente_senha

def login(cliente_usuario, cliente_senha):
    if not cliente_usuario:
        print("Nenhum usuário cadastrado. Cadastre um usuário primeiro.")
        return 

    usuario = input('Digite seu nome de usuário: ')
    while usuario not in cliente_usuario:
        print('Usuário não encontrado. Tente novamente.')
        usuario = input('Digite seu nome de usuário: ')
    index = cliente_usuario.index(usuario)
    senha = input('Digite sua senha: ')    
    while senha != cliente_senha[index]:
        print('Senha incorreta. Tente novamente.')
        senha = input('Digite sua senha: ')

    print('Acesso concedido. Seja bem-vindo.')

biblioteca = []

def cadastrar_livros():
    while True:
        livro = input('Digite o nome do livro (ou digite "sair" para terminar): ')
        if livro.lower() == 'sair':
            break
        biblioteca.append(livro)
    biblioteca.sort()  
    return biblioteca

def procurar_livro(biblioteca, chave):
    inicio = 0
    fim = len(biblioteca) - 1
    
    while inicio <= fim:
        meio = (inicio + fim) // 2

        if biblioteca[meio] == chave:
            return meio
        elif biblioteca[meio] > chave:
            fim = meio - 1
        else:
            inicio = meio + 1
    
    return -1

def gerenciador_livros():
    try:

        biblioteca = cadastrar_livros()
        print('Livros cadastrados:', biblioteca)
        while True:
          print('Menu:')
          print('1. Procurar livros')
          print('2. Sair')
          escolha = input('Escolha uma das opções: ')

          if escolha == '1':
             try:
                livro_procurado = input('Digite o livro que você deseja procurar: ')
                resultado = procurar_livro(biblioteca, livro_procurado)
                if resultado != -1:
                   print('Livro encontrado. Boa leitura:', biblioteca[resultado])
                else:
                   print('Livro não encontrado.')
             except Exception as e:
                  
               print(f"ocorreu um erro ao procurar o  livro:",{e})

          elif escolha == '2':
             break
          else:
            print('Opção inválida, tente novamente.')
    except Exception as e:
        print(f'ocorreu um erro ao gerenciar livros: {e}')          
def main():
    print('Bem-vindo ao sistema de gerenciamento de usuários e livros.')
    gerenciador_usuarios()
   
if __name__ == "__main__":
    main()

